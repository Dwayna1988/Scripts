//****************************************************************************
//SPHERE by : Menasoft ©1997-2006
//www.sphereserver.net
// All SPHERE script files and formats are copyright Menasoft & Partners.
// This file may be freely edited for personal use, but may not be distributed
// in whole or in part, in any format without express written permission from
// Menasoft & Partners.  All donations and contributions
// become the property of Menasoft & Partners.
//****************************************************************************
// FILE LAST UPDATED: 27-Jul-2006
VERSION=0.56b

[FUNCTION TRANSFERGUILD]
targetf f_transferguild <argn1>
sysmessage Who do you wish to transfer the guild to?

// ------------------------------------------------------
// ------------------------------------------------------
// ------------------------------------------------------

[FUNCTION f_guildsys_transfer]
If (<ARGO.ISITEM>)
 sysmessage You cannot transfer a guild to that.
 Return 1
Endif

If (<ARGO.NPC>)
 sysmessage You cannot transfer a guild to that.
 Return 1
Endif

If (<argo> == <uid>)
 sysmessage You are the master of <uid.<args>.name> already.
 Return 1
Endif

If (<memoryfindtype.memory_guild.link.uid> != <args>)
 sysmessage You are not a member of the guild.
 Return 1
Endif

local.obj = <OBJ.UID>
OBJ = <ARGO.UID>

If (<obj.memoryfindtype.memory_guild.link.uid> != <args>)
 sysmessage That player is not a member of the guild.
 OBJ=<local.obj>
 Return 1
Endif

TRY uid.<args>.masteruid=<obj.uid>

f_guildsys_sendsmsg <args>,Guild Message: Guildmaster changed to: <obj.name>
OBJ=<local.obj>

[FUNCTION f_guildsys_recruitguy]
local.guild = <args>
if ( <uid.<local.guild>.type> != t_stone_guild )
	return 1
endif
if ( (<uid.<local.guild>.masteruid> != <uid>) && (!<isgm>) )
	return 1
endif

if ( <argo.isItem> )
	sysmessage @038a You may only recruit players into the guild.
	return 1
endif
if ( !<argo.isPlayer> )
	sysmessage @038a You may only recruit players into the guild.
	return 1
endif
if ( <argo.flags> & <def.statf_dead> )
	sysmessage @038A Only the living may be recruited.
	return 1
endif
if ( <argo.memoryfindtype.<def.memory_guild>.uid> )
	if ( <argo.memoryfindtype.<def.memory_guild>.link> == <local.guild> )
		sysmessage @038A They are already a guildmember!
	else
		sysmessage @038A You can only recruit candidates who are not already in a guild.
	endif
	return 1
endif

local.oldobj = <obj.uid>
obj = <local.guild>

if ( <obj.memberfromuid.<argo.uid>.uid> != <argo.uid> )
	if ( (<obj.masteruid> == <uid>) || <isgm> )
		if ( <def0.GUILDCONFIG_MAXMEMBERS> )
			if ( <obj.member.count <def.STONEPRIV_MEMBER>> < <def0.GUILDCONFIG_MAXMEMBERS> )
				obj.JoinAsMember <argo.uid>
			else
				sysmessage @038A There are already <dDEF0.GUILDCONFIG_MAXMEMBERS> members. You cannot submit a member at this time.
			endif
		else
			obj.JoinAsMember <argo.uid>
		endif
	else
		if ( <def0.GUILDCONFIG_MAXCANDIDATES> )
			if ( <obj.member.count <def.STONEPRIV_CANDIDATE>> < <def0.GUILDCONFIG_MAXCANDIDATES> )
				obj.ApplyToJoin <argo.uid>
			else
				sysmessage @038A There are already <dDEF0.GUILDCONFIG_MAXCANDIDATES> candidates awaiting a decision. You cannot submit a candidate at this time.
			endif
		else
			obj.ApplyToJoin <argo.uid>
		endif
else
	sysmessage @038A They are already a candidate.
endif

obj = <local.oldobj>

[FUNCTION f_guildsys_isnameused]
local.guild = <argv[0]>
local.name = <strsub <eval (strlen(<local.guild>) + 1)> <eval strlen(<args>)> <args>>

local.index = 0
local.return = 0
local.totalguild = <serv.guildstones.count>

while ( <local.index> < <local.totalguild> )
	local.currentguild = <serv.guildstones.<local.index>.uid>
	if ( <local.currentguild> )
		if ( !strcmpi(<uid.<local.currentguild>.name>,<local.name>) )
			local.return = 1
			local.index = <local.totalguild> + 1
		endif
	endif
	
	local.index += 1
endwhile

return <local.return>

[FUNCTION f_guildsys_isabbrevused]
local.guild = <argv[0]>
local.abbrev = <strsub <eval (strlen(<local.guild>) + 1)> <eval strlen(<args>)> <args>>

serv.log <local.guild> <local.abbrev>

local.index = 0
local.return = 0
local.totalguild = <serv.guildstones.count>

while ( <local.index> < <local.totalguild> )
	local.currentguild = <serv.guildstones.<local.index>.uid>
	if ( <local.currentguild> )
		if ( !strcmpi(<uid.<local.currentguild>.abbrev>,<local.abbrev>) )
			local.return = 1
			local.index = <local.totalguild> + 1
		endif
	endif
	
	local.index += 1
endwhile

return <local.return>

[FUNCTION f_guildsys_isatwarwith]
local.myguild = <argv[0]>
local.otherguild = <argv[1]>

if (( <uid.<local.myguild>.type> != t_stone_guild ) || ( <uid.<local.otherguild>.type> != t_stone_guild ))
	return 0
endif

if ( <uid.<local.myguild>.guildfromuid.<local.otherguild>.isenemy> && <uid.<local.otherguild>.guildfromuid.<local.myguild>.isenemy> )
	return 1
endif

return 0

[FUNCTION f_guildsys_candeclarewarwith]
local.myguild = <argv[0]>
local.otherguild = <argv[1]>

if (( <uid.<local.myguild>.type> != t_stone_guild ) || ( <uid.<local.otherguild>.type> != t_stone_guild ))
	return 0
endif

local.myguild_count = <uid.<local.myguild>.member.count <def.STONEPRIV_MEMBER>>
if ( <uid.<local.myguild>.masteruid> )
	local.myguild_count += 1
endif

if ( <local.myguild_count> == 0 )
	return 0
endif

local.otherguild_count = <uid.<local.otherguild>.member.count <def.STONEPRIV_MEMBER>>
if ( <uid.<local.otherguild>.masteruid> )
	local.otherguild_count += 1
endif

if ( <local.otherguild_count> == 0 )
	return 0
endif

// Order cannot declare war.
if (( <uid.<local.myguild>.align> == 1 ) && ( <uid.<local.myguild>.align> == <uid.<local.otherguild>.align> ))
	return 0
endif

return 1

[FUNCTION f_guildsys_searchguildname]
local.currentuid = <argv[0]>
local.textsearch = <argv[1]>

local.cid = 0
local.cuid = <serv.guildstones.<local.cid>.uid>

while( <local.cuid> )
	if ( <local.currentuid> != <local.cuid> )
		if ( strregex(<local.textsearch>*,<uid.<local.cid>.name>))
			if (<local.cid>)
				local.returndata = <local.cuid>,
			else
				local.returndata .= <local.cuid>,
			endif
		endif
	endif
	
	local.cid += 1
	local.cuid = <serv.guildstones.<local.cid>.uid>
	if ( <def0.GUILDCONFIG_MAX_NSEARCH_RES> )
		if ( <local.cid> >= <def0.GUILDCONFIG_MAX_NSEARCH_RES> )
			local.cuid = 0 // Break the loop
		endif
	endif
endwhile

return <local.returndata>

[FUNCTION f_guildsys_listsplit]
local.guildlist_count = <argv>
if ( !<local.guildlist_count> )
	for x 0 <local.guildlist_count>
		try local.guildlist_data<dLOCAL.X> = <argv[<dLOCAL.X>]>
	endfor
endif

[FUNCTION f_guildsys_declarewar]
local.firstuid = <argv[0]>
local.seconduid = <argv[1]>

if (( <uid.<local.firstuid>.type> != t_stone_guild ) || ( <uid.<local.seconduid>.type> != t_stone_guild ))
	return 0
endif

try uid.<local.firstuid>.declarewar <local.seconduid>

if ( <argv[2]> )
	f_guildsys_sendsmsg <local.firstuid>,Guild Message: Your guild is now at war: <uid.<local.seconduid>.name> [<uid.<local.seconduid>.abbrev>]
	f_guildsys_sendsmsg <local.seconduid>,Guild Message: Your guild is now at war: <uid.<local.firstuid>.name> [<uid.<local.firstuid>.abbrev>]
endif

return 1

[FUNCTION f_guildsys_declarepeace]
local.firstuid = <argv[0]>
local.seconduid = <argv[1]>

if (( <uid.<local.firstuid>.type> != t_stone_guild ) || ( <uid.<local.seconduid>.type> != t_stone_guild ))
	return 0
endif

try uid.<local.firstuid>.declarepeace <local.seconduid>

if ( <argv[2]> )
	f_guildsys_sendsmsg <local.firstuid>,Guild Message: You are now at peace with this guild: <uid.<local.seconduid>.name> [<uid.<local.seconduid>.abbrev>]
	f_guildsys_sendsmsg <local.seconduid>,Guild Message: You are now at peace with this guild: <uid.<local.firstuid>.name> [<uid.<local.firstuid>.abbrev>]
endif

return 1

[FUNCTION f_guildsys_sendsmsg]
local.guilduid = <argv[0]>
local.message = <StrArg <StrEat <args>>>

if ( <uid.<local.guilduid>.type> != t_stone_guild )
	return 0
endif

if ( !strlen(<local.message>) )
	return 0
endif

local.membercount = <uid.<local.guilduid>.member.count>

for member 0 <local.membercount>
	local.memberuid = <uid.<local.guilduid>.member.<local.member>.uid>
	if ( <local.memberuid> )
		if ( <uid.<local.memberuid>.isonline> )
			try uid.<local.memberuid>.sysmessage @038A,0,3 <local.message>
		endif
	endif
endfor

// ------------------------------------------------------
// ------- 	Hardcoded functions called by Sphere	-------
// ------------------------------------------------------

// Called to check if a guild is at war (if commented sphere will use its internal check)
// I -> Guild
// ARGO -> Guild to check against
// RETURN -> 0: not an enemy
//					 1: an enemy
//					 2: use sphere internal check

[COMMENT FUNCTION f_guildsys_internal_isatwarwith]
if (( <type> != t_stone_guild ) || ( <argo.type> != t_stone_guild ))
	return 0
endif

if ( <align> && <argo.align> )
	return ( <align> != <argo.align> )
endif

if ( <guildfromuid.<argo.uid>.isenemy> && <argo.guildfromuid.<uid>.isenemy> )
	return 1
endif

return 0

[EOF]